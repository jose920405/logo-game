{"version":3,"sources":["Images/Letters/zoovu-z.svg","Images/Letters/zoovu-v.svg","Images/Letters/zoovu-u.svg","Images/clock.svg","MaterialContainer.tsx","Reducers/Game/GameActionTypes.ts","Utils/Constants.ts","Reducers/Game/GameActions.ts","Components/DragBox/index.tsx","Components/DropBox/index.tsx","Components/DraggableLettersZone/index.tsx","Utils/Colors.ts","Components/ScoreLabelLC/Styles.ts","Components/ScoreLabelLC/index.tsx","Components/ScoreLabelLC/ScoreLabelLCScene.ts","Utils/History.ts","Views/Game.tsx","Views/Welcome.tsx","App.tsx","Reducers/Game/GameReducer.ts","ReduxConfig/combineReducers.ts","ReduxConfig/SetUpStore.tsx","ReduxConfig/index.tsx","index.tsx","Images/Letters/zoovu-o.svg"],"names":["module","exports","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","button","textTransform","GameActionTypes","defaultDropZonesInfo","dropIndex","validLetter","set_dropzones","value","type","SET_DROPZONES","set_finish_exercise","SET_FINISH_EXERCISE","set_score","SET_SCORE","reset_game","dispatch","a","batch","useStyles","makeStyles","dragContainer","cursor","marginTop","spacing","letterImg","width","height","paperContainer","padding","DragBox","fromDrop","imageInfo","index","classes","dropZones","useSelector","state","game","score","useDispatch","enqueueSnackbar","useSnackbar","useDrag","item","image","img","letter","begin","monitor","end","dragItem","dropResult","getDropResult","cloneZones","cloneDeep","itemIndex","oldDropIndex","findIndex","dragIndex","variant","dragLetter","collect","isDragging","drag","opacity","Grid","ref","className","style","Paper","elevation","src","alt","dropContainer","border","borderRadius","marginRight","DropBox","dropInfo","useDrop","accept","drop","isOver","canDrop","isActive","backgroundColor","images","shuffle","imageZ","imageO","imageV","imageU","captionText","color","DraggableLettersZone","DndProvider","backend","HTML5Backend","container","justify","alignItems","direction","map","eachImage","key","Typography","eachDropZone","Colors","blueApp","styles","createStyles","clockIcon","scoreText","marginLeft","ScoreLabelLC","interval","clearInterval","this","nextProps","props","exerciseFinished","prevProps","startInterval","setTimeout","setInterval","xs","sm","clock","React","Component","compose","withWidth","withStyles","Styles","connect","bindActionCreators","ScoreLabel","createHashHistory","GamePage","userName","History","replace","useEffect","allCardPlaced","successResult","each","dropZone","validateResult","root","goodLookText","captionContainer","fontWeight","WelcomePage","useState","textName","setTextName","alignContent","lg","md","helloFriend","TextField","userInput","placeholder","onChange","event","target","Button","data-testid","letsGoBtn","onClick","SET_USER_NAME","push","marginBottom","borderColor","Routes","exact","path","component","withRoot","maxSnack","ThemeProvider","CssBaseline","inmutableState","initialState","reducer","action","CLEAR_REDUCER","combineReducers","enhancer","applyMiddleware","thunk","encryptor","createEncryptor","secretKey","process","ENCRYPTOR_SECRET_KEY","onError","error","console","persistConfig","storage","blacklist","transforms","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","configureStore","ReduxRoot","loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3318e8d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zoovu-z.98d275b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoovu-v.f04e5e7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoovu-u.509452d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.3baae9d3.svg\";","import { CssBaseline } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport * as React from 'react';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#e5e5e5',\n      main: '#727272',\n      dark: '#363839',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff5e50',\n      main: '#e41e26',\n      dark: '#a90000',\n      contrastText: '#fff',\n    },\n  },\n  typography: {\n    button: {\n      textTransform: 'none'\n    }\n  }\n});\n\n// tslint:disable-next-line: variable-name\nexport function withRoot(Component: any) {\n  function WithRoot(props: object) {\n    // MuiThemeProvider makes the theme available down the React tree\n    return (\n      <ThemeProvider theme={theme}>\n        {/* Reboot kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </ThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}","enum GameActionTypes {\n  CLEAR_REDUCER = 'game/CLEAR_REDUCER',\n  SET_DROPZONES = 'game/SET_DROPZONES',\n  SET_FINISH_EXERCISE = 'game/SET_FINISH_EXERCISE',\n  SET_SCORE = 'game/SET_SCORE',\n  SET_USER_NAME = 'game/SET_USER_NAME',\n}\n\nexport default GameActionTypes;\n","export const defaultDropZonesInfo: IDropZone[] = [\n  { dropIndex: 0, validLetter: 'z' },\n  { dropIndex: 1, validLetter: 'o' },\n  { dropIndex: 2, validLetter: 'o' },\n  { dropIndex: 3, validLetter: 'v' },\n  { dropIndex: 4, validLetter: 'u' }\n];","// Libraries\nimport { batch } from 'react-redux';\n\n// Utils\nimport { defaultDropZonesInfo } from '../../Utils/Constants';\n\nimport GameActionTypes from './GameActionTypes';\n\nexport const set_dropzones = (value: IDropZone[]): IAction => ({ type: GameActionTypes.SET_DROPZONES, value });\nexport const set_finish_exercise = (value: boolean): IAction => ({ type: GameActionTypes.SET_FINISH_EXERCISE, value });\nexport const set_score = (value: number): IAction => ({ type: GameActionTypes.SET_SCORE, value });\nexport const set_user_name = (value: string): IAction => ({ type: GameActionTypes.SET_USER_NAME, value });\n\nexport const reset_game = (): IThunkResult => {\n  return async (dispatch) => {\n    batch(() => {\n      dispatch(set_dropzones(defaultDropZonesInfo));\n      dispatch(set_finish_exercise(false));\n      dispatch(set_score(0));\n    });\n  };\n};\n","import React from 'react';\nimport { useDrag, DragSourceMonitor } from 'react-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Libraries\nimport { cloneDeep, findIndex } from 'lodash';\nimport { useSnackbar } from 'notistack';\n\n// Material Components\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\n// Styles\nimport { makeStyles } from '@material-ui/styles';\nimport { Theme } from '@material-ui/core/styles';\n\n// Actions\nimport { set_dropzones, set_score } from '../../Reducers/Game/GameActions';\n\ninterface BoxProps {\n  imageInfo: {\n    img: string;\n    letter: string;\n  };\n  index: number;\n  fromDrop?: boolean;\n}\n\n// tslint:disable-next-line: variable-name\nconst DragBox: React.FC<BoxProps> = ({ fromDrop, imageInfo, index }) => {\n  const classes = useStyles();\n\n  const dropZones = useSelector((state: IRootState) => state.game.dropZones);\n  const score = useSelector((state: IRootState) => state.game.score);\n\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { index, type: 'box', image: imageInfo.img, letter: imageInfo.letter, fromDrop },\n    begin: (monitor: DragSourceMonitor) => {\n      if (score === 0) {\n        dispatch(set_score(1));\n      }\n    },\n    end: (dragItem, monitor: DragSourceMonitor) => {\n      const dropResult = monitor.getDropResult();\n      if (dragItem && dropResult) {\n        const cloneZones = cloneDeep(dropZones);\n\n        const itemIndex = dragItem.index;\n        if (dragItem.fromDrop) {\n          const oldDropIndex = findIndex(cloneZones, { dragIndex: itemIndex });\n          cloneZones[oldDropIndex] = { dropIndex: cloneZones[oldDropIndex].dropIndex, validLetter: cloneZones[oldDropIndex].validLetter };\n        }\n\n        const dropIndex: number = dropResult.index;\n\n        if (dragItem.letter !== cloneZones[dropIndex].validLetter) {\n          dispatch(set_score(score + 10));\n          enqueueSnackbar('Invalid Position: 10 seconds penalti', { variant: 'error' });\n        }\n\n        cloneZones[dropIndex] = {\n          ...cloneZones[dropIndex],\n          dragIndex: dragItem.index,\n          dragLetter: dragItem.letter,\n          image: dragItem.image,\n        };\n\n        dispatch(set_dropzones(cloneZones));\n      }\n    },\n    collect: (monitor) => {\n      return {\n        isDragging: monitor.isDragging(),\n      };\n    },\n  });\n\n  const opacity = isDragging ? 0.4 : 1;\n\n  return (\n    <Grid ref={drag} className={classes.dragContainer} style={{ opacity }} item>\n      <Paper elevation={5} className={classes.paperContainer}>\n        <img className={classes.letterImg} src={imageInfo.img} alt={'img'} />\n      </Paper>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  dragContainer: {\n    cursor: 'move',\n    marginTop: theme.spacing(4),\n  },\n  letterImg: {\n    width: 100,\n    height: 100,\n  },\n  paperContainer: {\n    padding: theme.spacing(5),\n  },\n}));\n\nexport default DragBox;","import React from 'react';\nimport { useDrop } from 'react-dnd';\n\n// Material Components\nimport Grid from '@material-ui/core/Grid';\n\n// Styles\nimport { makeStyles } from '@material-ui/styles';\nimport { Theme } from '@material-ui/core/styles';\n\ninterface DropProps {\n  dropInfo: IDropZone;\n}\n\n// tslint:disable-next-line: variable-name\nconst DropBox: React.FC<DropProps> = ({ dropInfo }) => {\n  const classes = useStyles();\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: 'box',\n    drop: () => ({ index: dropInfo.dropIndex }),\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n\n  const isActive = canDrop && isOver;\n\n  return (\n    <Grid ref={drop} className={classes.dropContainer} style={{ backgroundColor: isActive ? 'lightgray' : 'transparent' }} />\n  );\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  dropContainer: {\n    border: '2px dashed gray',\n    borderRadius: 6,\n    width: 185,\n    height: 185,\n    marginRight: theme.spacing(3),\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport default DropBox;","import React from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\n// Libraries\nimport { map, shuffle } from 'lodash';\n\n// Material Components\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n// Components\nimport DragBox from '../DragBox';\nimport DropBox from '../DropBox';\n\n// Styles\nimport { makeStyles } from '@material-ui/styles';\nimport { Theme } from '@material-ui/core/styles';\n\n// Images\nimport imageZ from '../../Images/Letters/zoovu-z.svg';\nimport imageO from '../../Images/Letters/zoovu-o.svg';\nimport imageV from '../../Images/Letters/zoovu-v.svg';\nimport imageU from '../../Images/Letters/zoovu-u.svg';\nimport { useSelector } from 'react-redux';\n\nconst images = shuffle([\n  { img: imageZ, letter: 'z' },\n  { img: imageO, letter: 'o' },\n  { img: imageO, letter: 'o' },\n  { img: imageV, letter: 'v' },\n  { img: imageU, letter: 'u' }\n]);\n\nfunction DraggableLettersZone() {\n  const classes = useStyles();\n\n  const dropZones = useSelector((state: IRootState) => state.game.dropZones);\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Grid\n        container\n        justify={'center'}\n        alignItems={'center'}\n        direction={'row'}\n        spacing={3}\n      >\n        {map(images, (eachImage, index) => <DragBox key={index} imageInfo={eachImage} index={index} />)}\n      </Grid>\n      <Typography className={classes.captionText} variant='caption' color='inherit'>\n        {`...and drop them to make the logo great again!`}\n      </Typography>\n      <Grid\n        container\n        justify={'center'}\n        alignItems={'center'}\n        direction={'row'}\n        spacing={3}\n      >\n        {map(dropZones, (eachDropZone, index) => {\n          if (eachDropZone.image) {\n            return (\n              <DragBox\n                key={index}\n                fromDrop\n                imageInfo={{ img: eachDropZone.image, letter: eachDropZone.dragLetter as string }}\n                index={eachDropZone.dragIndex as number}\n              />\n            );\n          }\n\n          return (\n            <DropBox key={index} dropInfo={eachDropZone} />\n          );\n        })}\n      </Grid>\n    </DndProvider>\n  );\n}\n\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  captionText: {\n    marginTop: theme.spacing(6),\n    color: 'gray',\n  },\n}));\n\nexport default DraggableLettersZone;","// tslint:disable-next-line: variable-name\nconst Colors = {\n  blueApp: '#2929c1',\n};\n\nexport default Colors;","import { Theme } from '@material-ui/core';\nimport createStyles from '@material-ui/core/styles/createStyles';\n\n// Utils\nimport Colors from '../../Utils/Colors';\n\nconst styles = (theme: Theme) => createStyles({\n  clockIcon: {\n    width: 15,\n    height: 15,\n    color: 'yellow',\n  },\n  scoreText: {\n    marginLeft: theme.spacing(1),\n    color: Colors.blueApp,\n  },\n});\n\nexport default styles;\n","import React from 'react';\nimport { compose } from 'recompose';\n\n// Material Comps\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport withWidth from '@material-ui/core/withWidth';\n\n// Material Styles\nimport { withStyles } from '@material-ui/core';\nimport Styles from './Styles';\n\n// Images\nimport clock from '../../Images/clock.svg';\n\n// Props\nimport { ScoreLabelProps } from './ScoreLabelLCScene';\n\nclass ScoreLabelLC extends React.Component<ScoreLabelProps> {\n  private interval: any = null;\n\n  //#region LifeCycle\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  shouldComponentUpdate(nextProps: ScoreLabelProps) {\n    if (nextProps.score !== this.props.score || nextProps.exerciseFinished !== this.props.exerciseFinished) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate(prevProps: ScoreLabelProps) {\n    if (this.props.score === 1) {\n      this.startInterval();\n    }\n\n    if (!prevProps.exerciseFinished && this.props.exerciseFinished) {\n      clearInterval(this.interval);\n      setTimeout(() => {\n        this.props.reset_game();\n      }, 10000);\n    }\n  }\n  //#endregion LifeCycle\n\n  //#region Functions\n  startInterval() {\n    this.interval = setInterval(() => {\n      const score = this.props.score;\n      this.props.set_score(score + 1);\n    }, 1000);\n  }\n  //#endregion Functions\n\n  render() {\n    const classes = this.props.classes;\n    const score = this.props.score;\n\n    return (\n      <Grid container direction={'row'} item xs={12} sm={6} justify={this.props.width === 'xs' ? 'flex-start' : 'flex-end'} alignItems={'center'}>\n        <img className={classes.clockIcon} src={clock} alt='clockIcon' />\n        <Typography className={classes.scoreText} color='inherit'>\n          {`Your score: ${score} seconds`}\n        </Typography>\n      </Grid>\n    );\n  }\n}\n\nexport default compose(\n  withWidth(),\n  withStyles(Styles),\n)(ScoreLabelLC);\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n// Material\nimport { WithStyles } from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles';\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\n\n// Component\nimport ScoreLabel from '.';\n\n// Actions\nimport { reset_game, set_score } from '../../Reducers/Game/GameActions';\n\n// Styles\nimport Styles from './Styles';\n\n//#region TS Interfaces and Types\ninterface IOwnProps {\n  theme?: Theme; // Prop inject in withStyles->withTheme\n  width?: Breakpoint;\n}\ntype TMapStateToProps = ReturnType<typeof mapStateToProps>;\ntype TMapDispatchToProps = ReturnType<typeof mapDispatchToProps>;\n\nexport type ScoreLabelProps = IOwnProps & TMapStateToProps & TMapDispatchToProps & WithStyles<typeof Styles>;\n//#endregion TS Interfaces and Types\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    exerciseFinished: state.game.exerciseFinished,\n    score: state.game.score,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatchType) => bindActionCreators({\n  // GameActions\n  reset_game,\n  set_score,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScoreLabel);\n","import { createHashHistory } from 'history';\nexport default createHashHistory();\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Libraries\nimport { each } from 'lodash';\nimport { useSnackbar } from 'notistack';\n\n// Material Components\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n// Material Styles\nimport { makeStyles } from '@material-ui/styles';\nimport { Theme } from '@material-ui/core/styles';\n\n// Components\nimport DraggableLettersZone from '../Components/DraggableLettersZone';\nimport ScoreLabel from '../Components/ScoreLabelLC/ScoreLabelLCScene';\n\n// Actions\nimport { set_finish_exercise } from '../Reducers/Game/GameActions';\n\n// Utils\nimport History from '../Utils/History';\n\nexport function GamePage() {\n  const classes = useStyles();\n\n  //#region Reducer info\n  const userName = useSelector((state: IRootState) => state.game.userName);\n  const dropZones = useSelector((state: IRootState) => state.game.dropZones);\n  const score = useSelector((state: IRootState) => state.game.score);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const dispatch = useDispatch();\n  if (!userName) {\n    History.replace('/');\n  }\n  //#endregion Reducer Info\n\n  //#region Functions\n  useEffect(() => {\n\n    const validateResult = () => {\n      let allCardPlaced = true;\n      let successResult = true;\n      each(dropZones, (dropZone) => {\n        if (!dropZone.image) {\n          allCardPlaced = false;\n          return false; // break loop\n        }\n\n        if (dropZone.dragLetter !== dropZone.validLetter) {\n          successResult = false;\n        }\n      });\n\n      if (allCardPlaced) {\n        if (successResult) {\n          enqueueSnackbar(`Great. The order is correct. You score was: ${score}`, { variant: 'success' });\n        } else {\n          enqueueSnackbar(`Sorry. The order is wrong. You score was: ${score}`, { variant: 'error' });\n        }\n\n        dispatch(set_finish_exercise(true));\n      }\n    };\n\n    validateResult();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dropZones]);\n  //#endregion Functions\n\n  return (\n    <Grid container justify={'center'} className={classes.root} item direction={'column'}>\n      <Grid container direction={'row'}>\n        <Grid container item xs={12} sm={6}>\n          <Typography className={classes.goodLookText} variant='h6' color='inherit'>\n            {`Good Look, ${userName}`}\n          </Typography>\n        </Grid>\n        <ScoreLabel />\n      </Grid>\n      <Grid container direction={'row'} className={classes.captionContainer} justify={'space-between'}>\n        <Typography className={classes.captionText} variant='caption' color='inherit'>\n          {`Pick up the right cards`}\n        </Typography>\n        <Typography className={classes.captionText} variant='caption' color='inherit'>\n          {`The faster the better!`}\n        </Typography>\n      </Grid>\n      <DraggableLettersZone />\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  goodLookText: {\n    fontWeight: 600,\n  },\n  captionText: {\n    color: 'gray',\n  },\n  captionContainer: {\n    marginTop: theme.spacing(3),\n  },\n}));","import { useSnackbar } from 'notistack';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n// Material Components\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\n// Styles\nimport { makeStyles } from '@material-ui/styles';\nimport { Theme } from '@material-ui/core/styles';\n\n// Utils\nimport Colors from '../Utils/Colors';\n\n// Actions\nimport { set_user_name } from '../Reducers/Game/GameActions';\nimport History from '../Utils/History';\n\nexport function WelcomePage() {\n  const classes = useStyles();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n\n  const [textName, setTextName] = useState('');\n\n  //#region Functions\n/**\n * I didn't find a place when debounce should be used\n * Maybe on drag events but react DnD make this really good and events and dispatched only when is necessary.\n * anyway i use debounce from lodash, but here is an example of the debounce.\n */\n  // const debounce = (callback: any, delay = 250) => {\n  //   let timeoutId: any = null;\n  //   return (...args: any) => {\n  //     clearTimeout(timeoutId);\n  //     timeoutId = setTimeout(() => {\n  //       timeoutId = null;\n  //       callback(...args);\n  //     }, delay);\n  //   };\n  // };\n  //#endregion Functions\n\n  //#region Handlers\n  const handleUserTextChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setTextName(event.target.value);\n  };\n\n  const onClickLetsGo = () => {\n    if (!textName) {\n      return enqueueSnackbar('Please add your name', { variant: 'warning' });\n    }\n\n    dispatch(set_user_name(textName));\n    History.push('/game');\n  };\n  //#endregion Handlers\n\n  return (\n    <Grid className={classes.root} container justify={'center'} alignContent={'center'}>\n      <Grid\n        container\n        justify={'center'}\n        alignItems={'center'}\n        direction={'column'}\n        item\n        lg={4}\n        md={6}\n        sm={8}\n        xs={10}\n      >\n        <Typography className={classes.helloFriend} variant='h6' color='inherit'>\n          {`Hello friend, tell me your name...`}\n        </Typography>\n        <TextField className={classes.userInput} placeholder={'Your name here'} value={textName} onChange={handleUserTextChange} />\n        <Button data-testid={'letsBtn'} className={classes.letsGoBtn} variant={'outlined'} onClick={onClickLetsGo}>{`Let's go ->`}</Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    height: '100%',\n  },\n  helloFriend: {\n    fontWeight: 600,\n  },\n  userInput: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    width: '60%',\n  },\n  letsGoBtn: {\n    width: '40%',\n    color: Colors.blueApp,\n    borderColor: Colors.blueApp,\n    borderRadius: 12,\n  },\n}));","// Libraries\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\n\n// Modules\nimport { withRoot } from './MaterialContainer';\n\n// Styles\nimport './App.css';\n\n// Views\nimport { GamePage } from './Views/Game';\nimport { WelcomePage } from './Views/Welcome';\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path='/' component={WelcomePage} />\n      <Route exact path='/game' component={GamePage} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <Router>\n        <Routes />\n      </Router>\n    </SnackbarProvider>\n  );\n}\n\nexport default withRoot(App);\n","// Libraries\nimport { cloneDeep } from 'lodash';\nimport { Reducer } from 'redux';\n\n// Utils\nimport { defaultDropZonesInfo } from '../../Utils/Constants';\n\n// Reducer Utils\nimport GameActionTypes from './GameActionTypes';\n\nconst inmutableState: IGameReducerType = {\n  dropZones: defaultDropZonesInfo,\n  exerciseFinished: false,\n  userName: '',\n  score: 0,\n};\n\nconst initialState = cloneDeep(inmutableState);\n\nconst reducer: Reducer<IGameReducerType, IAction> = (state = initialState, action: IAction): IGameReducerType => {\n  switch (action.type) {\n    case GameActionTypes.SET_DROPZONES:\n      return {\n        ...state,\n        dropZones: action.value,\n      };\n    case GameActionTypes.SET_FINISH_EXERCISE:\n      return {\n        ...state,\n        exerciseFinished: action.value,\n      };\n    case GameActionTypes.SET_USER_NAME:\n      return {\n        ...state,\n        userName: action.value,\n      };\n    case GameActionTypes.SET_SCORE:\n      return {\n        ...state,\n        score: action.value,\n      };\n    case GameActionTypes.CLEAR_REDUCER:\n      return cloneDeep(inmutableState);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\n// Reducers\nimport game from '../Reducers/Game/GameReducer';\n\nexport default combineReducers<IRootState>({\n  game,\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\n\n//#region persist import block\nimport { PersistConfig, persistReducer, persistStore } from 'redux-persist';\nimport createEncryptor from 'redux-persist-transform-encrypt';\nimport storage from 'redux-persist/lib/storage';\n//#endregion persist import block\n\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './combineReducers';\n\nexport const configureStore = (initialState?: IRootState) => {\n  const enhancer = compose(\n    applyMiddleware(thunk),\n  );\n\n  //#region Persist Logic\n  const encryptor = createEncryptor({\n    secretKey: process.env.ENCRYPTOR_SECRET_KEY || 'superSecretKey', // Create this env var to keep save the key for persistent encryptor\n    onError: (error) => {\n      // tslint:disable-next-line: no-console\n      console.error('createEncryptor onError ==> ', error);\n    },\n  });\n\n  const persistConfig: PersistConfig<any> = {\n    key: 'root',\n    storage,\n    blacklist: ['game'], // comment this line to enable persistence even if user refresh the page.\n    transforms: [encryptor as any],\n  };\n\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n  //#endregion Persist Logic\n\n  const store = createStore<IRootState, IAction, {}, {}>(persistedReducer, initialState, enhancer);\n  const persistor = persistStore(store) as any;\n\n  return { persistor, store };\n\n};\n\nexport default configureStore;\n","import * as React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n// Main Component\nimport App from '../App';\n\n// Configuration\nimport configureStore from './SetUpStore';\n\nconst { persistor, store } = configureStore();\n\nexport function ReduxRoot() {\n  return (\n    <Provider store={store}>\n      <PersistGate\n        loading={<label>Loading...</label>}\n        persistor={persistor}\n      >\n        <App />\n      </PersistGate>\n    </Provider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ReduxRoot } from './ReduxConfig';\n\nReactDOM.render(\n  <ReduxRoot />,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/zoovu-o.987e802d.svg\";"],"sourceRoot":""}